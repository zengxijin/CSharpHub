//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.18408
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace ApiMonitor.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="ArrayOfString", Namespace="http://Data_Update.sjpt", ItemName="string")]
    [System.SerializableAttribute()]
    public class ArrayOfString : System.Collections.Generic.List<string> {
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://Data_Update.sjpt", ConfigurationName="ServiceReference1.Data_Update_IPortType")]
    public interface Data_Update_IPortType {
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="out")]
        string Diagnosis_Check(string in0, string in1, string in2);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="out")]
        System.Threading.Tasks.Task<string> Diagnosis_CheckAsync(string in0, string in1, string in2);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="out")]
        string Update_Data(string in0, string in1, string in2);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="out")]
        System.Threading.Tasks.Task<string> Update_DataAsync(string in0, string in1, string in2);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="out")]
        string Execute_Sql(string in0, string in1, string in2);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="out")]
        System.Threading.Tasks.Task<string> Execute_SqlAsync(string in0, string in1, string in2);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="out")]
        string Check_Ylzh_Bulsh(string in0, string in1);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="out")]
        System.Threading.Tasks.Task<string> Check_Ylzh_BulshAsync(string in0, string in1);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="out")]
        string Find_Member1(ApiMonitor.ServiceReference1.ArrayOfString in0, string in1);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="out")]
        System.Threading.Tasks.Task<string> Find_Member1Async(ApiMonitor.ServiceReference1.ArrayOfString in0, string in1);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="out")]
        string Zyh_Check(string in0, string in1, string in2);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="out")]
        System.Threading.Tasks.Task<string> Zyh_CheckAsync(string in0, string in1, string in2);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="out")]
        string GetYljgjb(string in0, string in1);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="out")]
        System.Threading.Tasks.Task<string> GetYljgjbAsync(string in0, string in1);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="out")]
        string Get_Is_Hops_Sk(string in0, string in1);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="out")]
        System.Threading.Tasks.Task<string> Get_Is_Hops_SkAsync(string in0, string in1);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="out")]
        string Get_New_Ylzh(string in0, string in1);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="out")]
        System.Threading.Tasks.Task<string> Get_New_YlzhAsync(string in0, string in1);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="out")]
        string Get_Member(string in0, string in1);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="out")]
        System.Threading.Tasks.Task<string> Get_MemberAsync(string in0, string in1);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="out")]
        string Update_Data_String(string in0, string in1, string in2);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="out")]
        System.Threading.Tasks.Task<string> Update_Data_StringAsync(string in0, string in1, string in2);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="out")]
        string Get_Is_Sk(string in0, string in1);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="out")]
        System.Threading.Tasks.Task<string> Get_Is_SkAsync(string in0, string in1);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="out")]
        string Update_Data1(string in0, string in1, string in2);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="out")]
        System.Threading.Tasks.Task<string> Update_Data1Async(string in0, string in1, string in2);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface Data_Update_IPortTypeChannel : ApiMonitor.ServiceReference1.Data_Update_IPortType, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Data_Update_IPortTypeClient : System.ServiceModel.ClientBase<ApiMonitor.ServiceReference1.Data_Update_IPortType>, ApiMonitor.ServiceReference1.Data_Update_IPortType {
        
        public Data_Update_IPortTypeClient() {
        }
        
        public Data_Update_IPortTypeClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Data_Update_IPortTypeClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Data_Update_IPortTypeClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Data_Update_IPortTypeClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string Diagnosis_Check(string in0, string in1, string in2) {
            return base.Channel.Diagnosis_Check(in0, in1, in2);
        }
        
        public System.Threading.Tasks.Task<string> Diagnosis_CheckAsync(string in0, string in1, string in2) {
            return base.Channel.Diagnosis_CheckAsync(in0, in1, in2);
        }
        
        public string Update_Data(string in0, string in1, string in2) {
            return base.Channel.Update_Data(in0, in1, in2);
        }
        
        public System.Threading.Tasks.Task<string> Update_DataAsync(string in0, string in1, string in2) {
            return base.Channel.Update_DataAsync(in0, in1, in2);
        }
        
        public string Execute_Sql(string in0, string in1, string in2) {
            return base.Channel.Execute_Sql(in0, in1, in2);
        }
        
        public System.Threading.Tasks.Task<string> Execute_SqlAsync(string in0, string in1, string in2) {
            return base.Channel.Execute_SqlAsync(in0, in1, in2);
        }
        
        public string Check_Ylzh_Bulsh(string in0, string in1) {
            return base.Channel.Check_Ylzh_Bulsh(in0, in1);
        }
        
        public System.Threading.Tasks.Task<string> Check_Ylzh_BulshAsync(string in0, string in1) {
            return base.Channel.Check_Ylzh_BulshAsync(in0, in1);
        }
        
        public string Find_Member1(ApiMonitor.ServiceReference1.ArrayOfString in0, string in1) {
            return base.Channel.Find_Member1(in0, in1);
        }
        
        public System.Threading.Tasks.Task<string> Find_Member1Async(ApiMonitor.ServiceReference1.ArrayOfString in0, string in1) {
            return base.Channel.Find_Member1Async(in0, in1);
        }
        
        public string Zyh_Check(string in0, string in1, string in2) {
            return base.Channel.Zyh_Check(in0, in1, in2);
        }
        
        public System.Threading.Tasks.Task<string> Zyh_CheckAsync(string in0, string in1, string in2) {
            return base.Channel.Zyh_CheckAsync(in0, in1, in2);
        }
        
        public string GetYljgjb(string in0, string in1) {
            return base.Channel.GetYljgjb(in0, in1);
        }
        
        public System.Threading.Tasks.Task<string> GetYljgjbAsync(string in0, string in1) {
            return base.Channel.GetYljgjbAsync(in0, in1);
        }
        
        public string Get_Is_Hops_Sk(string in0, string in1) {
            return base.Channel.Get_Is_Hops_Sk(in0, in1);
        }
        
        public System.Threading.Tasks.Task<string> Get_Is_Hops_SkAsync(string in0, string in1) {
            return base.Channel.Get_Is_Hops_SkAsync(in0, in1);
        }
        
        public string Get_New_Ylzh(string in0, string in1) {
            return base.Channel.Get_New_Ylzh(in0, in1);
        }
        
        public System.Threading.Tasks.Task<string> Get_New_YlzhAsync(string in0, string in1) {
            return base.Channel.Get_New_YlzhAsync(in0, in1);
        }
        
        public string Get_Member(string in0, string in1) {
            return base.Channel.Get_Member(in0, in1);
        }
        
        public System.Threading.Tasks.Task<string> Get_MemberAsync(string in0, string in1) {
            return base.Channel.Get_MemberAsync(in0, in1);
        }
        
        public string Update_Data_String(string in0, string in1, string in2) {
            return base.Channel.Update_Data_String(in0, in1, in2);
        }
        
        public System.Threading.Tasks.Task<string> Update_Data_StringAsync(string in0, string in1, string in2) {
            return base.Channel.Update_Data_StringAsync(in0, in1, in2);
        }
        
        public string Get_Is_Sk(string in0, string in1) {
            return base.Channel.Get_Is_Sk(in0, in1);
        }
        
        public System.Threading.Tasks.Task<string> Get_Is_SkAsync(string in0, string in1) {
            return base.Channel.Get_Is_SkAsync(in0, in1);
        }
        
        public string Update_Data1(string in0, string in1, string in2) {
            return base.Channel.Update_Data1(in0, in1, in2);
        }
        
        public System.Threading.Tasks.Task<string> Update_Data1Async(string in0, string in1, string in2) {
            return base.Channel.Update_Data1Async(in0, in1, in2);
        }
    }
}
